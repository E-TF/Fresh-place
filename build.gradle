 plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'individual'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'com.auth0:java-jwt:3.19.1'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	implementation 'commons-io:commons-io:2.8.0'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

 def frontendDir = "$projectDir/src/main/frontend"

 sourceSets {
	 main {
		 resources { srcDirs = ["$projectDir/src/main/resources"]
		 }
	 }
 }

 processResources { dependsOn "copyReactBuildFiles" }

 task installReact(type: Exec) {
	 workingDir "$frontendDir"
	 inputs.dir "$frontendDir"
	 group = BasePlugin.BUILD_GROUP
	 if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		 commandLine "npm.cmd", "audit", "fix"
		 commandLine 'npm.cmd', 'install' }
	 else {
		 commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	 }
 }

 task buildReact(type: Exec) {
	 dependsOn "installReact"
	 workingDir "$frontendDir"
	 inputs.dir "$frontendDir"
	 group = BasePlugin.BUILD_GROUP
	 if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		 commandLine "npm.cmd", "run-script", "build"
	 } else {
		 commandLine "npm", "run-script", "build"
	 }
 }

 task copyReactBuildFiles(type: Copy) {
	 dependsOn "buildReact"
	 from "$frontendDir/build"
	 into "$projectDir/src/main/resources/static"
 }
